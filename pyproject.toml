[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry]
authors = ["Martin Hjelmare <marhje52@gmail.com>"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries",
]
description = "Use the Remember the Milk API with aiohttp."
license = "Apache Software License 2.0"
name = "aiortm"
packages = [
  {include = "aiortm", from = "src"},
]
readme = "README.md"
repository = "https://github.com/MartinHjelmare/aiortm"
version = "0.6.4"

[tool.poetry.scripts]
aiortm = 'aiortm.cli:cli'

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MartinHjelmare/aiortm/issues"
"Changelog" = "https://github.com/MartinHjelmare/aiortm/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
aiohttp = "^3.8"
click = "^8.1"
pydantic = "^1.9"
python = "^3.9"
yarl = "^1.7"

[tool.poetry.dev-dependencies]
aioresponses = "^0.7.3"
bandit = "^1.7"
black = "^23.1"
flake8 = "^6.0"
flake8-docstrings = "^1.6"
isort = "^5.10"
mypy = "^1.0"
pre-commit = "^3.0.0"
pylint = "^3.0.0"
pylint-strict-informational = "^0.1"
pytest = "^7.0"
pytest-aiohttp = "^1.0.4"
pytest-cov = "^4.0"
pyupgrade = "^3.0"

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "if TYPE_CHECKING",
  "raise NotImplementedError",
]

[tool.isort]
combine_as_imports = true
force_sort_within_sections = true
forced_separate = [
  "tests",
]
known_first_party = [
  "aiortm",
  "tests",
]
profile = "black"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = [
  'setup.py',
]
mypy_path = "src/"
no_implicit_optional = true
plugins = [
  "pydantic.mypy",
]
show_error_codes = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
allow_untyped_defs = true
module = "tests.*"

[tool.pylint.MAIN]
extension-pkg-allow-list = [
  "pydantic",
]
fail-on = [
  "I",
]
ignore = []
init-hook = """\
    from pathlib import Path; \
    import sys; \

    from pylint.config import find_default_config_files; \

    sys.path.append( \
        str(Path(next(find_default_config_files())).parent.joinpath('pylint/plugins'))
    ) \
    """
jobs = 2
load-plugins = [
  "pylint.extensions.code_style",
  "pylint.extensions.typing",
  "pylint_strict_informational",
]
persistent = false
py-version = "3.9"
score = false

[tool.pylint.DESIGN]
max-args = 7

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "format",
  "duplicate-code",
  "locally-disabled",
  "too-few-public-methods",
  "unused-argument",
]
enable = [
  "useless-suppression",
  "use-symbolic-message-instead",
]

[tool.pylint.CODE_STYLE]
max-line-length-suggestions = 88

[tool.pylint.TYPING]
runtime-typing = false

[tool.pytest.ini_options]
addopts = "-Wdefault --cov=aiortm --cov-report=term-missing:skip-covered"
asyncio_mode = "auto"
pythonpath = ["src"]

[tool.semantic_release]
build_command = "pip install poetry && poetry build"
major_on_zero = false
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = [
  "src/aiortm/__init__.py:__version__",
]

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "^chore.*",
  "^ci.*",
  "^Bump.*",
]
